/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.eventsim.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PageView extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1630044064343974924L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PageView\",\"namespace\":\"io.confluent.eventsim.avro\",\"fields\":[{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"userId\",\"type\":[\"null\",\"long\"]},{\"name\":\"sessionId\",\"type\":\"long\"},{\"name\":\"page\",\"type\":\"string\"},{\"name\":\"auth\",\"type\":\"string\"},{\"name\":\"method\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"int\"},{\"name\":\"level\",\"type\":\"string\"},{\"name\":\"itemInSession\",\"type\":\"int\"},{\"name\":\"userDetails\",\"type\":[{\"type\":\"map\",\"values\":[\"string\",\"long\",\"double\"]},\"null\"]},{\"name\":\"deviceDetails\",\"type\":[{\"type\":\"map\",\"values\":[\"string\",\"long\",\"double\"]},\"null\"]},{\"name\":\"songProperties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"song\",\"fields\":[{\"name\":\"artist\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"duration\",\"type\":\"double\"}]}]},{\"name\":\"tag\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PageView> ENCODER =
      new BinaryMessageEncoder<PageView>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PageView> DECODER =
      new BinaryMessageDecoder<PageView>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PageView> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PageView> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PageView> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PageView>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PageView to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PageView from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PageView instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PageView fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long ts;
  @Deprecated public java.lang.Long userId;
  @Deprecated public long sessionId;
  @Deprecated public java.lang.CharSequence page;
  @Deprecated public java.lang.CharSequence auth;
  @Deprecated public java.lang.CharSequence method;
  @Deprecated public int status;
  @Deprecated public java.lang.CharSequence level;
  @Deprecated public int itemInSession;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Object> userDetails;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Object> deviceDetails;
  @Deprecated public io.confluent.eventsim.avro.song songProperties;
  @Deprecated public java.lang.CharSequence tag;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PageView() {}

  /**
   * All-args constructor.
   * @param ts The new value for ts
   * @param userId The new value for userId
   * @param sessionId The new value for sessionId
   * @param page The new value for page
   * @param auth The new value for auth
   * @param method The new value for method
   * @param status The new value for status
   * @param level The new value for level
   * @param itemInSession The new value for itemInSession
   * @param userDetails The new value for userDetails
   * @param deviceDetails The new value for deviceDetails
   * @param songProperties The new value for songProperties
   * @param tag The new value for tag
   */
  public PageView(java.lang.Long ts, java.lang.Long userId, java.lang.Long sessionId, java.lang.CharSequence page, java.lang.CharSequence auth, java.lang.CharSequence method, java.lang.Integer status, java.lang.CharSequence level, java.lang.Integer itemInSession, java.util.Map<java.lang.CharSequence,java.lang.Object> userDetails, java.util.Map<java.lang.CharSequence,java.lang.Object> deviceDetails, io.confluent.eventsim.avro.song songProperties, java.lang.CharSequence tag) {
    this.ts = ts;
    this.userId = userId;
    this.sessionId = sessionId;
    this.page = page;
    this.auth = auth;
    this.method = method;
    this.status = status;
    this.level = level;
    this.itemInSession = itemInSession;
    this.userDetails = userDetails;
    this.deviceDetails = deviceDetails;
    this.songProperties = songProperties;
    this.tag = tag;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ts;
    case 1: return userId;
    case 2: return sessionId;
    case 3: return page;
    case 4: return auth;
    case 5: return method;
    case 6: return status;
    case 7: return level;
    case 8: return itemInSession;
    case 9: return userDetails;
    case 10: return deviceDetails;
    case 11: return songProperties;
    case 12: return tag;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ts = (java.lang.Long)value$; break;
    case 1: userId = (java.lang.Long)value$; break;
    case 2: sessionId = (java.lang.Long)value$; break;
    case 3: page = (java.lang.CharSequence)value$; break;
    case 4: auth = (java.lang.CharSequence)value$; break;
    case 5: method = (java.lang.CharSequence)value$; break;
    case 6: status = (java.lang.Integer)value$; break;
    case 7: level = (java.lang.CharSequence)value$; break;
    case 8: itemInSession = (java.lang.Integer)value$; break;
    case 9: userDetails = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    case 10: deviceDetails = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    case 11: songProperties = (io.confluent.eventsim.avro.song)value$; break;
    case 12: tag = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ts' field.
   * @return The value of the 'ts' field.
   */
  public long getTs() {
    return ts;
  }


  /**
   * Sets the value of the 'ts' field.
   * @param value the value to set.
   */
  public void setTs(long value) {
    this.ts = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'sessionId' field.
   * @return The value of the 'sessionId' field.
   */
  public long getSessionId() {
    return sessionId;
  }


  /**
   * Sets the value of the 'sessionId' field.
   * @param value the value to set.
   */
  public void setSessionId(long value) {
    this.sessionId = value;
  }

  /**
   * Gets the value of the 'page' field.
   * @return The value of the 'page' field.
   */
  public java.lang.CharSequence getPage() {
    return page;
  }


  /**
   * Sets the value of the 'page' field.
   * @param value the value to set.
   */
  public void setPage(java.lang.CharSequence value) {
    this.page = value;
  }

  /**
   * Gets the value of the 'auth' field.
   * @return The value of the 'auth' field.
   */
  public java.lang.CharSequence getAuth() {
    return auth;
  }


  /**
   * Sets the value of the 'auth' field.
   * @param value the value to set.
   */
  public void setAuth(java.lang.CharSequence value) {
    this.auth = value;
  }

  /**
   * Gets the value of the 'method' field.
   * @return The value of the 'method' field.
   */
  public java.lang.CharSequence getMethod() {
    return method;
  }


  /**
   * Sets the value of the 'method' field.
   * @param value the value to set.
   */
  public void setMethod(java.lang.CharSequence value) {
    this.method = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public int getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(int value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'level' field.
   * @return The value of the 'level' field.
   */
  public java.lang.CharSequence getLevel() {
    return level;
  }


  /**
   * Sets the value of the 'level' field.
   * @param value the value to set.
   */
  public void setLevel(java.lang.CharSequence value) {
    this.level = value;
  }

  /**
   * Gets the value of the 'itemInSession' field.
   * @return The value of the 'itemInSession' field.
   */
  public int getItemInSession() {
    return itemInSession;
  }


  /**
   * Sets the value of the 'itemInSession' field.
   * @param value the value to set.
   */
  public void setItemInSession(int value) {
    this.itemInSession = value;
  }

  /**
   * Gets the value of the 'userDetails' field.
   * @return The value of the 'userDetails' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getUserDetails() {
    return userDetails;
  }


  /**
   * Sets the value of the 'userDetails' field.
   * @param value the value to set.
   */
  public void setUserDetails(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.userDetails = value;
  }

  /**
   * Gets the value of the 'deviceDetails' field.
   * @return The value of the 'deviceDetails' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getDeviceDetails() {
    return deviceDetails;
  }


  /**
   * Sets the value of the 'deviceDetails' field.
   * @param value the value to set.
   */
  public void setDeviceDetails(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.deviceDetails = value;
  }

  /**
   * Gets the value of the 'songProperties' field.
   * @return The value of the 'songProperties' field.
   */
  public io.confluent.eventsim.avro.song getSongProperties() {
    return songProperties;
  }


  /**
   * Sets the value of the 'songProperties' field.
   * @param value the value to set.
   */
  public void setSongProperties(io.confluent.eventsim.avro.song value) {
    this.songProperties = value;
  }

  /**
   * Gets the value of the 'tag' field.
   * @return The value of the 'tag' field.
   */
  public java.lang.CharSequence getTag() {
    return tag;
  }


  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(java.lang.CharSequence value) {
    this.tag = value;
  }

  /**
   * Creates a new PageView RecordBuilder.
   * @return A new PageView RecordBuilder
   */
  public static io.confluent.eventsim.avro.PageView.Builder newBuilder() {
    return new io.confluent.eventsim.avro.PageView.Builder();
  }

  /**
   * Creates a new PageView RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PageView RecordBuilder
   */
  public static io.confluent.eventsim.avro.PageView.Builder newBuilder(io.confluent.eventsim.avro.PageView.Builder other) {
    if (other == null) {
      return new io.confluent.eventsim.avro.PageView.Builder();
    } else {
      return new io.confluent.eventsim.avro.PageView.Builder(other);
    }
  }

  /**
   * Creates a new PageView RecordBuilder by copying an existing PageView instance.
   * @param other The existing instance to copy.
   * @return A new PageView RecordBuilder
   */
  public static io.confluent.eventsim.avro.PageView.Builder newBuilder(io.confluent.eventsim.avro.PageView other) {
    if (other == null) {
      return new io.confluent.eventsim.avro.PageView.Builder();
    } else {
      return new io.confluent.eventsim.avro.PageView.Builder(other);
    }
  }

  /**
   * RecordBuilder for PageView instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PageView>
    implements org.apache.avro.data.RecordBuilder<PageView> {

    private long ts;
    private java.lang.Long userId;
    private long sessionId;
    private java.lang.CharSequence page;
    private java.lang.CharSequence auth;
    private java.lang.CharSequence method;
    private int status;
    private java.lang.CharSequence level;
    private int itemInSession;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> userDetails;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> deviceDetails;
    private io.confluent.eventsim.avro.song songProperties;
    private io.confluent.eventsim.avro.song.Builder songPropertiesBuilder;
    private java.lang.CharSequence tag;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.eventsim.avro.PageView.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ts)) {
        this.ts = data().deepCopy(fields()[0].schema(), other.ts);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[2].schema(), other.sessionId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.page)) {
        this.page = data().deepCopy(fields()[3].schema(), other.page);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.auth)) {
        this.auth = data().deepCopy(fields()[4].schema(), other.auth);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.method)) {
        this.method = data().deepCopy(fields()[5].schema(), other.method);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.level)) {
        this.level = data().deepCopy(fields()[7].schema(), other.level);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.itemInSession)) {
        this.itemInSession = data().deepCopy(fields()[8].schema(), other.itemInSession);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.userDetails)) {
        this.userDetails = data().deepCopy(fields()[9].schema(), other.userDetails);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.deviceDetails)) {
        this.deviceDetails = data().deepCopy(fields()[10].schema(), other.deviceDetails);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.songProperties)) {
        this.songProperties = data().deepCopy(fields()[11].schema(), other.songProperties);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasSongPropertiesBuilder()) {
        this.songPropertiesBuilder = io.confluent.eventsim.avro.song.newBuilder(other.getSongPropertiesBuilder());
      }
      if (isValidValue(fields()[12], other.tag)) {
        this.tag = data().deepCopy(fields()[12].schema(), other.tag);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing PageView instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.eventsim.avro.PageView other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.ts)) {
        this.ts = data().deepCopy(fields()[0].schema(), other.ts);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sessionId)) {
        this.sessionId = data().deepCopy(fields()[2].schema(), other.sessionId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.page)) {
        this.page = data().deepCopy(fields()[3].schema(), other.page);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.auth)) {
        this.auth = data().deepCopy(fields()[4].schema(), other.auth);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.method)) {
        this.method = data().deepCopy(fields()[5].schema(), other.method);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.level)) {
        this.level = data().deepCopy(fields()[7].schema(), other.level);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.itemInSession)) {
        this.itemInSession = data().deepCopy(fields()[8].schema(), other.itemInSession);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.userDetails)) {
        this.userDetails = data().deepCopy(fields()[9].schema(), other.userDetails);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.deviceDetails)) {
        this.deviceDetails = data().deepCopy(fields()[10].schema(), other.deviceDetails);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.songProperties)) {
        this.songProperties = data().deepCopy(fields()[11].schema(), other.songProperties);
        fieldSetFlags()[11] = true;
      }
      this.songPropertiesBuilder = null;
      if (isValidValue(fields()[12], other.tag)) {
        this.tag = data().deepCopy(fields()[12].schema(), other.tag);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'ts' field.
      * @return The value.
      */
    public long getTs() {
      return ts;
    }


    /**
      * Sets the value of the 'ts' field.
      * @param value The value of 'ts'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setTs(long value) {
      validate(fields()[0], value);
      this.ts = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ts' field has been set.
      * @return True if the 'ts' field has been set, false otherwise.
      */
    public boolean hasTs() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ts' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearTs() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setUserId(java.lang.Long value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionId' field.
      * @return The value.
      */
    public long getSessionId() {
      return sessionId;
    }


    /**
      * Sets the value of the 'sessionId' field.
      * @param value The value of 'sessionId'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setSessionId(long value) {
      validate(fields()[2], value);
      this.sessionId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionId' field has been set.
      * @return True if the 'sessionId' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sessionId' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearSessionId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'page' field.
      * @return The value.
      */
    public java.lang.CharSequence getPage() {
      return page;
    }


    /**
      * Sets the value of the 'page' field.
      * @param value The value of 'page'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setPage(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.page = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'page' field has been set.
      * @return True if the 'page' field has been set, false otherwise.
      */
    public boolean hasPage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'page' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearPage() {
      page = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'auth' field.
      * @return The value.
      */
    public java.lang.CharSequence getAuth() {
      return auth;
    }


    /**
      * Sets the value of the 'auth' field.
      * @param value The value of 'auth'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setAuth(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.auth = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'auth' field has been set.
      * @return True if the 'auth' field has been set, false otherwise.
      */
    public boolean hasAuth() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'auth' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearAuth() {
      auth = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'method' field.
      * @return The value.
      */
    public java.lang.CharSequence getMethod() {
      return method;
    }


    /**
      * Sets the value of the 'method' field.
      * @param value The value of 'method'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setMethod(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.method = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'method' field has been set.
      * @return True if the 'method' field has been set, false otherwise.
      */
    public boolean hasMethod() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'method' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearMethod() {
      method = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public int getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setStatus(int value) {
      validate(fields()[6], value);
      this.status = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearStatus() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'level' field.
      * @return The value.
      */
    public java.lang.CharSequence getLevel() {
      return level;
    }


    /**
      * Sets the value of the 'level' field.
      * @param value The value of 'level'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setLevel(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.level = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'level' field has been set.
      * @return True if the 'level' field has been set, false otherwise.
      */
    public boolean hasLevel() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'level' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearLevel() {
      level = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'itemInSession' field.
      * @return The value.
      */
    public int getItemInSession() {
      return itemInSession;
    }


    /**
      * Sets the value of the 'itemInSession' field.
      * @param value The value of 'itemInSession'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setItemInSession(int value) {
      validate(fields()[8], value);
      this.itemInSession = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'itemInSession' field has been set.
      * @return True if the 'itemInSession' field has been set, false otherwise.
      */
    public boolean hasItemInSession() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'itemInSession' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearItemInSession() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'userDetails' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getUserDetails() {
      return userDetails;
    }


    /**
      * Sets the value of the 'userDetails' field.
      * @param value The value of 'userDetails'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setUserDetails(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[9], value);
      this.userDetails = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'userDetails' field has been set.
      * @return True if the 'userDetails' field has been set, false otherwise.
      */
    public boolean hasUserDetails() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'userDetails' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearUserDetails() {
      userDetails = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceDetails' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getDeviceDetails() {
      return deviceDetails;
    }


    /**
      * Sets the value of the 'deviceDetails' field.
      * @param value The value of 'deviceDetails'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setDeviceDetails(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[10], value);
      this.deviceDetails = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceDetails' field has been set.
      * @return True if the 'deviceDetails' field has been set, false otherwise.
      */
    public boolean hasDeviceDetails() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'deviceDetails' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearDeviceDetails() {
      deviceDetails = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'songProperties' field.
      * @return The value.
      */
    public io.confluent.eventsim.avro.song getSongProperties() {
      return songProperties;
    }


    /**
      * Sets the value of the 'songProperties' field.
      * @param value The value of 'songProperties'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setSongProperties(io.confluent.eventsim.avro.song value) {
      validate(fields()[11], value);
      this.songPropertiesBuilder = null;
      this.songProperties = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'songProperties' field has been set.
      * @return True if the 'songProperties' field has been set, false otherwise.
      */
    public boolean hasSongProperties() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'songProperties' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.confluent.eventsim.avro.song.Builder getSongPropertiesBuilder() {
      if (songPropertiesBuilder == null) {
        if (hasSongProperties()) {
          setSongPropertiesBuilder(io.confluent.eventsim.avro.song.newBuilder(songProperties));
        } else {
          setSongPropertiesBuilder(io.confluent.eventsim.avro.song.newBuilder());
        }
      }
      return songPropertiesBuilder;
    }

    /**
     * Sets the Builder instance for the 'songProperties' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.confluent.eventsim.avro.PageView.Builder setSongPropertiesBuilder(io.confluent.eventsim.avro.song.Builder value) {
      clearSongProperties();
      songPropertiesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'songProperties' field has an active Builder instance
     * @return True if the 'songProperties' field has an active Builder instance
     */
    public boolean hasSongPropertiesBuilder() {
      return songPropertiesBuilder != null;
    }

    /**
      * Clears the value of the 'songProperties' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearSongProperties() {
      songProperties = null;
      songPropertiesBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'tag' field.
      * @return The value.
      */
    public java.lang.CharSequence getTag() {
      return tag;
    }


    /**
      * Sets the value of the 'tag' field.
      * @param value The value of 'tag'.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder setTag(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.tag = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'tag' field has been set.
      * @return True if the 'tag' field has been set, false otherwise.
      */
    public boolean hasTag() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'tag' field.
      * @return This builder.
      */
    public io.confluent.eventsim.avro.PageView.Builder clearTag() {
      tag = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PageView build() {
      try {
        PageView record = new PageView();
        record.ts = fieldSetFlags()[0] ? this.ts : (java.lang.Long) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.Long) defaultValue(fields()[1]);
        record.sessionId = fieldSetFlags()[2] ? this.sessionId : (java.lang.Long) defaultValue(fields()[2]);
        record.page = fieldSetFlags()[3] ? this.page : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.auth = fieldSetFlags()[4] ? this.auth : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.method = fieldSetFlags()[5] ? this.method : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.status = fieldSetFlags()[6] ? this.status : (java.lang.Integer) defaultValue(fields()[6]);
        record.level = fieldSetFlags()[7] ? this.level : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.itemInSession = fieldSetFlags()[8] ? this.itemInSession : (java.lang.Integer) defaultValue(fields()[8]);
        record.userDetails = fieldSetFlags()[9] ? this.userDetails : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[9]);
        record.deviceDetails = fieldSetFlags()[10] ? this.deviceDetails : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[10]);
        if (songPropertiesBuilder != null) {
          try {
            record.songProperties = this.songPropertiesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("songProperties"));
            throw e;
          }
        } else {
          record.songProperties = fieldSetFlags()[11] ? this.songProperties : (io.confluent.eventsim.avro.song) defaultValue(fields()[11]);
        }
        record.tag = fieldSetFlags()[12] ? this.tag : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PageView>
    WRITER$ = (org.apache.avro.io.DatumWriter<PageView>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PageView>
    READER$ = (org.apache.avro.io.DatumReader<PageView>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










